#!/bin/bash
#set -x
# Copyright (c) 2023 Red Hat, Inc.
# Copyright Contributors to the Open Cluster Management project


BASE_COLLECTION_PATH="/must-gather"
mkdir -p ${BASE_COLLECTION_PATH}

MCE_CLUSTER=false
HUB_CLUSTER=false
SPOKE_CLUSTER=false
MCE_NAME=""
OPERATOR_NAMESPACE=""
DEPLOYMENT_NAMESPACE=""
GATHER_MCE_RAN=false
GATHER_HUB_RAN=false
LARGE_ENV=false

check_if_engine () {
    MCE_NAME=$(oc get multiclusterengines.multicluster.openshift.io --all-namespaces --no-headers=true | awk '{ print $1 }')
    if [[ -n "$MCE_NAME" ]];
    then
      echo -e "Detected MCE resource: \"$MCE_NAME\" on current cluster. This cluster has been verified as an engine cluster.\n"
      MCE_CLUSTER=true
      OPERATOR_NAMESPACE=$(oc get pod -l control-plane=backplane-operator --all-namespaces --no-headers=true | head -n 1 | awk '{ print $1 }')
      DEPLOYMENT_NAMESPACE=$(oc get mce "$MCE_NAME" -o jsonpath='{.spec.targetNamespace}')
    else
      echo -e "No MCE resource detected on the current cluster. This is not an engine cluster (Previous errors can be safely ignored).\n"
    fi
}

check_if_hub () {
    if oc get multiclusterhubs.operator.open-cluster-management.io --all-namespaces --no-headers=true;
    then
      echo -e "Detected MCH resource. This cluster has been verified as a hub cluster.\n"
      HUB_CLUSTER=true
    else
      echo -e "No MCH resource detected on the current cluster. This is not a hub cluster (Previous errors can be safely ignored).\n"
    fi
}

check_if_spoke () {
    if oc get crd klusterlets.operator.open-cluster-management.io;
    then
      echo -e "The current cluster has klusterlets.operator.open-cluster-management.io crd, it is a spoke cluster.\n"
      export SPOKE_CLUSTER=true
    else
      echo -e "The current cluster does not have klusterlets.operator.open-cluster-management.io crd, it is not a spoke cluster.\n"
    fi
}

check_if_engine
check_if_spoke

if $MCE_CLUSTER; then
  echo "Running MulticlusterEngine Must-Gather"
  source /usr/bin/gather_mce_logs
  check_if_hub
  if $HUB_CLUSTER; then
    echo "Running ACM MultiClusterHub Must-Gather"
    source /usr/bin/gather_all_logs
  fi
fi

if $SPOKE_CLUSTER;
then
  source /usr/bin/gather_spoke_logs
fi
